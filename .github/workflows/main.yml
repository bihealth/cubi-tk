name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches_ignore: []

defaults:
  run:
    shell: bash -el {0}

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - uses: khan/pull-request-workflow-cancel@1.0.0
        with:
          workflows: "main.yml"
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    strategy:
      matrix:
        python-version:
          - "3.10"

  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install system dependencies
        run: sudo apt-get install -y libbz2-dev

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,bioconda,nodefaults
          environment-file: 'environment.yaml'
          python-version: ${{ matrix.python-version }}

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run linting tools
        run: |
          make lint

      - name: Comment PR
        if: github.event_name == 'pull_request' && failure()
        uses: marocchino/sticky-pull-request-comment@v1.1.0
        with:
          message: 'Please check your code via `make lint`.'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.10"
          # - "3.11"  # no compatible pysam yet
          # - "3.12"  # no compatible pysam yet
    needs: linting
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install system dependencies
        run: sudo apt-get install -y libbz2-dev

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: conda-forge,bioconda,nodefaults
          environment-file: 'environment.yaml'
          python-version: ${{ matrix.python-version }}

      - name: Set up Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: uv run pytest

      - uses: codecov/codecov-action@v3
